{"name":"geoservicesapi","tagline":"Java Client for using geo-services using Yelp, Mapquest APIs.","body":"## JAVA Client for using places search service from Yelp and directions and location services from MapQuest APIs\r\n\r\nThis JAVA Client can help you to request data from different APIs such as Yelp API - Places Services, and MapQuest API - Directions, Location Services.\r\n\r\n## Motivation\r\n\r\nWhile working on one of the projects, I developed this and thought sharing it with you all. Maybe someone will need it.\r\n\r\nSome web apps may require this for finding all the places around a location. And this library can be directly used for doing this just by adding it to your code. You can also create REST API for your own application.\r\n\r\n\r\n## Example\r\n\r\n### 'Places Service'\r\n\r\nPlacesServices is a class for consuming places services using Yelp Places API and MapQuest Geo-coding API.\r\n\r\nIt will show all the places according the search term stated in imported Yelp.java.\r\n\r\n```java\r\n//Initialize the service using keys given by Yelp and MapQuest APIs\r\n//Import Yelp.java\r\n\r\nString consumerKey = \"YOUR YELP CONSUMER KEY\";\r\nString consumerSecret = \"YOUR YELP CONSUMER SECRET\";\r\nString token = \"YOUR YELP TOKEN\";\r\nString tokenSecret = \"YOUR YELP TOKEN SECRET\";\r\nString mapquestKey = \"YOUR YELP MAPQUEST KEY\"\r\n\r\nPlacesServices service = new PlacesServices(consumerKey, consumerSecret, token, tokenSecret, mapquestKey);\r\n\r\nString lat = \"32.780140\";\r\nString lng = \"-96.800451\"\r\nJSONObject venues = service.getVenues(lat, lng);\r\n```\r\n\r\n### 'Directions Services'\r\n\r\nDirectionsServices is a class for consuming directions services using MapQuest Directions API.\r\n\r\n```java\r\n//Initialize the service using MapQuest API key\r\nString mapquestKey = \"YOUR MAPQUEST KEY\"\r\n\r\nDirectionsServices service = new DirectionsServices(mapquestKey);\r\n```\r\n\r\nYou can get a route between two locations using the following method.\r\n\r\n```java\r\n//Source location\r\nString source = \"32.780140,-96.800451\";\r\n//Destination location\r\nString destination = \"30.267153,-97.743061\";\r\n\r\nJSONObject route = service.getRoute(source, destination);\r\n```\r\n\r\nIt can also be used to find the midway between two locations on the road(approximately).\r\n\r\nInstead of getRoute() method, call the following method with same arguments.\r\n\r\n```java\r\nJSONObject midpoint = service.getMidpoint(source, destination);\r\n```\r\n\r\n### 'Location Services'\r\n\r\nLocationServices is a class for consuming location services using MapQuest Geo-coding API.\r\n\r\n```java\r\n//Initialize the service using MapQuest API key\r\nString mapquestKey = \"YOUR MAPQUEST KEY\"\r\n\r\nLocationServices service = new LocationServices(mapquestKey);\r\n```\r\n\r\nYou can get geo-location of an address.\r\n\r\n```java\r\nString address = \"1500 Marilla Street, Dallas, TX, 75201\";\r\nJSONObject coordinates = service.getCoordinatesUsingAddress(address);\r\n```\r\n\r\nYou can also get geo-location of an address if you know the components of the address.\r\n\r\n```java\r\nString street = \"1500 Marilla Street\";\r\nString city = \"Dallas\";\r\nString state = \"TX\";\r\nString postalCode = \"75201\";\r\n\r\nJSONObject coordinates = service.getCoordinatesUsingComponents(street, city, state, postalCode);\r\n```\r\n\r\nYou can get the address of a location using its geo-coordinates.\r\n\r\n```java\r\nString lat = \"32.777333\";\r\nString lng = \"-96.797090\"\r\n\r\nJSONObject location = service.getAddress(lat, lng);\r\n```\r\n\r\n## Authors and Contributors\r\n\r\n@ranesr\r\n\r\n[README Template](https://gist.github.com/jxson/1784669) by @jxson\r\n\r\n\r\n## Copyright and License\r\n\r\nCopyright (C) 2014 @ranesr\r\n\r\n[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n\r\nContact\r\n\r\nIf you want to suggest anything, please contact me at [saurabhrrane@gmail.com](mailto: saurabhrrane@gmail.com).","google":"UA-43007500-3","note":"Don't delete this file! It's used internally to help with page regeneration."}